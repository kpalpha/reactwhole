import React, { useState, useEffect } from 'react';
import { AgGridReact } from 'ag-grid-react';
import axios from 'axios';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';

const UsersList = () => {
  const [rowData, setRowData] = useState([]);

  // Fetch users from the API when the component mounts
  useEffect(() => {
    axios.get('https://localhost:7147/api/user') // Adjust the URL to match your API
      .then((response) => {
        setRowData(response.data); // Assuming response.data contains the list of users
      })
      .catch((error) => {
        console.error("There was an error fetching the users!", error);
      });
  }, []);

  const [columnDefs] = useState([
    { headerName: 'User ID', field: 'id', sortable: true },
    { headerName: 'First Name', field: 'firstName', sortable: true },
    { headerName: 'Last Name', field: 'lastName', sortable: true },
    { headerName: 'Mobile Number', field: 'mobileNumber', sortable: true },
    { headerName: 'Enrolment Date', field: 'enrolmentDate', sortable: true },
    { headerName: 'Native Place', field: 'nativePlace', sortable: true },
    { headerName: 'Areas of Interest', field: 'areasOfInterest', sortable: true },
    { headerName: 'Gender', field: 'gender', sortable: true },
    {
      headerName: 'Actions',
      field: 'actions',
      cellRendererFramework: (params) => (
        <div>
          <button onClick={() => handleEdit(params.data)}>Edit</button>
          <button onClick={() => handleDelete(params.data.id)}>Delete</button>
        </div>
      ),
    },
  ]);

  // Function to handle Edit (Calls ASP.NET Web API)
  const handleEdit = (user) => {
    const updatedUser = { ...user, firstName: prompt("Enter new first name:", user.firstName) };
    axios.post("https://localhost:7147/api/user/update", updatedUser) // Adjust the URL to match your API
      .then((response) => {
        alert(response.data.message);
        // Update the row data on success
        setRowData((prevData) => prevData.map((u) => (u.id === user.id ? updatedUser : u)));
      })
      .catch((error) => {
        console.error("There was an error updating the user!", error);
      });
  };

  // Function to handle Delete (Calls ASP.NET Web API)
  const handleDelete = (userId) => {
    if (window.confirm("Are you sure you want to delete this user?")) {
      axios.post("https://localhost:7147/api/user/delete", { userId }) // Adjust the URL to match your API
        .then((response) => {
          alert(response.data.message);
          // Remove the user from the table
          setRowData((prevData) => prevData.filter((user) => user.id !== userId));
        })
        .catch((error) => {
          console.error("There was an error deleting the user!", error);
        });
    }
  };

  return (
    <div className="ag-theme-alpine" style={{ height: 309, width: 1000 }}>
      <AgGridReact
        columnDefs={columnDefs}
        rowData={rowData}
        pagination={true}
        paginationPageSize={5}
        paginationAutoPageSize={true}
      />
    </div>
  );
};

export default UsersList;
